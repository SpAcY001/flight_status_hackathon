{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SESA737860\\\\Desktop\\\\hackathon\\\\flight_rdj\\\\flight-demo\\\\src\\\\components\\\\TableCell.jsx\";\n// import TableLetter from './TableLetter'\n\n// const TableCell = ({ word }) => {\n\n//     return (\n//         <td>\n//             {Array.from(word).map((letter, index) => (\n//                 <TableLetter key={index} letter={letter} index={index}/>\n//             ))}\n//         </td>\n//     )\n// }\n\n// export default TableCell\n\nimport React from \"react\";\nimport TableLetter from \"./TableLetter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableCell = ({\n  content\n}) => {\n  const renderLetters = text => {\n    return text.split(\"\").map((char, index) => /*#__PURE__*/_jsxDEV(TableLetter, {\n      char: char\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell-content\",\n      children: typeof content === \"string\" ? renderLetters(content) : content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = TableCell;\nexport default TableCell;\nvar _c;\n$RefreshReg$(_c, \"TableCell\");","map":{"version":3,"names":["React","TableLetter","jsxDEV","_jsxDEV","TableCell","content","renderLetters","text","split","map","char","index","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["C:/Users/SESA737860/Desktop/hackathon/flight_rdj/flight-demo/src/components/TableCell.jsx"],"sourcesContent":["// import TableLetter from './TableLetter'\n\n// const TableCell = ({ word }) => {\n\n//     return (\n//         <td>\n//             {Array.from(word).map((letter, index) => (\n//                 <TableLetter key={index} letter={letter} index={index}/>\n//             ))}\n//         </td>\n//     )\n// }\n\n// export default TableCell\n\nimport React from \"react\";\nimport TableLetter from \"./TableLetter\";\n\nconst TableCell = ({ content }) => {\n    const renderLetters = (text) => {\n        return text.split(\"\").map((char, index) => (\n            <TableLetter key={index} char={char} />\n        ));\n    };\n\n    return (\n        <td>\n            <div className=\"cell-content\">\n                {typeof content === \"string\" ? renderLetters(content) : content}\n            </div>\n        </td>\n    );\n};\n\nexport default TableCell;\n"],"mappings":";AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC/B,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC5B,OAAOA,IAAI,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClCR,OAAA,CAACF,WAAW;MAAaS,IAAI,EAAEA;IAAK,GAAlBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACzC,CAAC;EACN,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,eACIb,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAD,QAAA,EACxB,OAAOX,OAAO,KAAK,QAAQ,GAAGC,aAAa,CAACD,OAAO,CAAC,GAAGA;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb,CAAC;AAACG,EAAA,GAdId,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}